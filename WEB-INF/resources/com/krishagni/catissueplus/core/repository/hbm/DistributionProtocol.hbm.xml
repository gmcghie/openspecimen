<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="false">
  <class name="com.krishagni.catissueplus.core.administrative.domain.DistributionProtocol" table="CATISSUE_DISTRIBUTION_PROTOCOL">
    <id name="id" column="IDENTIFIER" type="long" unsaved-value="null">
      <generator class="native">
        <param name="sequence">CATISSUE_DISTRI_PROT_SEQ</param>
      </generator>	
    </id>
    
    <property name="title" column="TITLE"/>

    <property name="shortTitle"  column="SHORT_TITLE"/>

    <property name="irbId" column="IRB_IDENTIFIER"/>

    <property name="startDate" column="START_DATE"/>

    <property name="endDate" column="END_DATE"/>

    <property name="activityStatus" column="ACTIVITY_STATUS"/>

    <many-to-one
      name="institute"
      class="com.krishagni.catissueplus.core.administrative.domain.Institute"
      column="INSTITUTE_ID"/>

    <many-to-one
      name="defReceivingSite"
      class="com.krishagni.catissueplus.core.administrative.domain.Site"
      column="DEF_RECEIVING_SITE_ID"/>

    <many-to-one
      name="principalInvestigator"
      class="com.krishagni.catissueplus.core.administrative.domain.User"
      column="PRINCIPAL_INVESTIGATOR_ID"/>
      
    <set name="coordinators" table="OS_DP_COORDINATORS" inverse="false" cascade="none">
      <key column="DISTRIBUTION_PROTOCOL_ID"/>
      <many-to-many class="com.krishagni.catissueplus.core.administrative.domain.User" column="USER_ID"/>
    </set>
    
    <many-to-one
      name="report"
      class="com.krishagni.catissueplus.core.de.domain.SavedQuery"
      column="REPORT_ID"/>

    <set name="distributionOrders" inverse="false" cascade="none">
      <key column="DISTRIBUTION_PROTOCOL_ID"/>
      <one-to-many class="com.krishagni.catissueplus.core.administrative.domain.DistributionOrder"/>
      <filter name="activeEntity"/>
    </set>

    <set name="distributingSites" inverse="true" cascade="all-delete-orphan">
      <key column="DISTRIBUTION_PROTOCOL_ID"/>
      <one-to-many class="com.krishagni.catissueplus.core.administrative.domain.DpDistributionSite"/>
    </set>
    
    <set name="requirements" inverse="true" cascade="all-delete-orphan">
      <key column="DP_ID"/>
      <one-to-many class="com.krishagni.catissueplus.core.administrative.domain.DpRequirement"/>
      <filter name="activeEntity"/>
    </set>

    <set name="consentTiers" table="OS_DP_CONSENT_TIERS" inverse="true" cascade="all-delete-orphan" order-by="id">
      <key column="DP_ID"/>
      <one-to-many class="com.krishagni.catissueplus.core.administrative.domain.DpConsentTier"/>
      <filter name="activeEntity"/>
    </set>

    <filter name="activeEntity"/>

    <query name="getDistributionProtocolByTitle">
      from 
        com.krishagni.catissueplus.core.administrative.domain.DistributionProtocol 
      where 
        title=:title 
    </query>
      
    <query name="getDistributionProtocolByShortTitle">
      from 
        com.krishagni.catissueplus.core.administrative.domain.DistributionProtocol 
      where 
        shortTitle=:shortTitle 
    </query>
      
    <query name="getAllDistributionProtocols">
      from 
        com.krishagni.catissueplus.core.administrative.domain.DistributionProtocol 
      where 
        activityStatus != 'Disabled' 
      order by 
        title 
    </query>

    <query name="getSpmnCountByDps">
      select
        dp.id, count(orderItem.id)
      from
        com.krishagni.catissueplus.core.administrative.domain.DistributionProtocol dp
        join dp.distributionOrders do
        join do.orderItems orderItem
      where
        dp.id in (:dpIds) and
        do.status = 'EXECUTED'
      group by
        dp.id
    </query>
    
    <query name="getExpiringDps">
      select 
        dp
      from 
        com.krishagni.catissueplus.core.administrative.domain.DistributionProtocol dp
      where
        dp.endDate is not null and
        dp.endDate between :fromDate and :toDate and
        dp.activityStatus = 'Active'
    </query>

    <sql-query name="getNonConsentingSpecimens">
      <return-scalar column="label" type="string"/>

      select
        s.label as label
      from
        catissue_specimen s
      where
        s.identifier in (:specimenIds) and
        s.identifier not in (
          select
            s.identifier
          from
            catissue_specimen s
            inner join catissue_specimen_coll_group v on v.identifier = s.specimen_collection_group_id
            inner join catissue_coll_prot_reg reg on reg.identifier = v.collection_protocol_reg_id
            inner join catissue_consent_tier_response resp on resp.coll_prot_reg_id = reg.identifier
            inner join catissue_consent_tier cp_ct on cp_ct.identifier = resp.consent_tier_id
            inner join os_dp_consent_tiers dp_ct on dp_ct.consent_stmt_id = cp_ct.consent_stmt_id
          where
            s.identifier in (:specimenIds) and
            dp_ct.dp_id = :dpId and
            dp_ct.activity_status = 'Active' and
            cp_ct.activity_status = 'Active' and
            resp.response = 'Yes'
          group by
            s.identifier
          having
            count(resp.identifier) = :respCount
        )
    </sql-query>
  </class>
</hibernate-mapping>
